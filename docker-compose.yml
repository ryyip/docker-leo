version: '3'

services:
  php72:
    container_name: php72
    build: ./docker/files/php72
    tty: true
    restart: always
    expose:
      - "9000"
    volumes:
      - ~/www/html:/var/www/html
      - ./docker/log/php72:/var/log/php-fpm
      - ./docker/config/php72:/usr/local/etc/php
      - ./docker/config/php72ssh:/root/.ssh/id_rsa
      - ./docker/config/php72ssh:/root/.ssh/id_rsa.pub
    depends_on:
      - redis4
      - mysql8
    links:
      - redis4:redis4
      - mysql8:mysql8
    networks:
      - app-network
  nginx:
    container_name: nginx
    image: nginx:1.22.0-alpine-perl
    tty: true
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ~/www/html:/var/www/html
      - ./docker/config/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/log/nginx:/var/log/nginx
    depends_on:
      - php72
    links:
      - php72
    networks:
    - app-network
  mysql8:
    container_name: mysql8
    image: mysql:8.0.29
    restart: always
    expose:
      - "3306"
    ports:
      - "3306:3306"
    volumes:
      - ./docker/data/mysql:/var/lib/mysql
      - ./docker/config/mysql/my.cnf:/etc/my.cnf
    environment:
      - MYSQL_ROOT_PASSWORD=root
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app-network
  redis4:
    container_name: redis4
    image: redis:4.0-alpine
    restart: always
    expose:
      - "6379"
    ports:
      - "6379:6379"
    volumes:
      - ./docker/data/redis:/data
    command: redis-server --appendonly yes
    networks:
      - app-network
  adminer:
    image: adminer
    restart: always
    expose:
      - '80'
    ports:
      - 8080:8080
    environment:
      - PMA_USER=root
      - PMA_PASSWORD=root
    networks:
      - app-network
  phpredisadmin:
    container_name: phpredisadmin
    image: erikdubbelboer/phpredisadmin
    expose:
      - '80'
    ports:
      - "8081:80"
    environment:
      - REDIS_1_HOST=redis4
      - REDIS_1_NAME=redis
    depends_on:
      - redis4
    links:
      - redis4:redis4
    networks:
      - app-network
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.10.7-management
    restart: always
    ports:
      - 25672:25672
      - 15671:15671
      - 15672:15672
    volumes:
      - ./docker/data/rabbitmq:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=123456
    networks:
      - app-network

networks:
  app-network:
    driver: "bridge"
